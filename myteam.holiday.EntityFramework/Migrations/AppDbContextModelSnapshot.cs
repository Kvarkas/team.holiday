// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myteam.holiday.EntityFramework.Data;

#nullable disable

namespace myteam.holiday.EntityFramework.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("myteam.holiday.Domain.Models.Celebration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CelebrationDateFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CelebrationDateTo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CelebrationName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.Medical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("MedicalDateFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("MedicalDateTo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MedicalName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Medical");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("InviteLink")
                        .HasColumnType("longtext");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TeamBase")
                        .HasColumnType("longtext");

                    b.Property<string>("TeamName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CreateOpportunity")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("longtext");

                    b.Property<string>("UserEmail")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserRoleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.Vacation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("VacationDateFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("VacationDateTo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VacationName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacation");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.Weekend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("WeekendDateFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("WeekendDateTo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WeekendName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Weekend");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.Medical", b =>
                {
                    b.HasOne("myteam.holiday.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.User", b =>
                {
                    b.HasOne("myteam.holiday.Domain.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("myteam.holiday.Domain.Models.Vacation", b =>
                {
                    b.HasOne("myteam.holiday.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
